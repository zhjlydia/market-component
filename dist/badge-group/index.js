import { SpuiComponent } from '../common/component';
import { isNumber } from '../common/utils';
SpuiComponent({
  relation: {
    name: 'badge',
    type: 'descendant',

    linked(target) {
      this.badges.push(target);
      this.setActive();
    },

    unlinked(target) {
      this.badges = this.badges.filter(item => item !== target);
      this.setActive();
    }

  },
  props: {
    active: {
      type: Number,
      value: 0
    }
  },
  watch: {
    active: 'setActive'
  },

  beforeCreate() {
    this.badges = [];
    this.currentActive = -1;
  },

  methods: {
    setActive(badge) {
      let {
        active
      } = this.data;
      const {
        badges
      } = this;

      if (badge && !isNumber(badge)) {
        active = badges.indexOf(badge);
      }

      if (active === this.currentActive) {
        return;
      }

      if (this.currentActive !== -1 && badges[this.currentActive]) {
        this.$emit('change', active);
        badges[this.currentActive].setActive(false);
      }

      if (badges[active]) {
        badges[active].setActive(true);
        this.currentActive = active;
      }
    }

  }
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJhZGdlLWdyb3VwL2luZGV4LnRzIl0sIm5hbWVzIjpbIlNwdWlDb21wb25lbnQiLCJpc051bWJlciIsInJlbGF0aW9uIiwibmFtZSIsInR5cGUiLCJsaW5rZWQiLCJ0YXJnZXQiLCJiYWRnZXMiLCJwdXNoIiwic2V0QWN0aXZlIiwidW5saW5rZWQiLCJmaWx0ZXIiLCJpdGVtIiwicHJvcHMiLCJhY3RpdmUiLCJOdW1iZXIiLCJ2YWx1ZSIsIndhdGNoIiwiYmVmb3JlQ3JlYXRlIiwiY3VycmVudEFjdGl2ZSIsIm1ldGhvZHMiLCJiYWRnZSIsImRhdGEiLCJpbmRleE9mIiwiJGVtaXQiXSwibWFwcGluZ3MiOiJBQUFBLFNBQVNBLGFBQVQsUUFBOEIscUJBQTlCO0FBQ0EsU0FBU0MsUUFBVCxRQUF5QixpQkFBekI7QUFFQUQsYUFBYSxDQUFDO0FBQ1pFLEVBQUFBLFFBQVEsRUFBRTtBQUNSQyxJQUFBQSxJQUFJLEVBQUUsT0FERTtBQUVSQyxJQUFBQSxJQUFJLEVBQUUsWUFGRTs7QUFHUkMsSUFBQUEsTUFBTSxDQUFDQyxNQUFELEVBQXdCO0FBQzVCLFdBQUtDLE1BQUwsQ0FBWUMsSUFBWixDQUFpQkYsTUFBakI7QUFDQSxXQUFLRyxTQUFMO0FBQ0QsS0FOTzs7QUFPUkMsSUFBQUEsUUFBUSxDQUFDSixNQUFELEVBQXdCO0FBQzlCLFdBQUtDLE1BQUwsR0FBYyxLQUFLQSxNQUFMLENBQVlJLE1BQVosQ0FBbUJDLElBQUksSUFBSUEsSUFBSSxLQUFLTixNQUFwQyxDQUFkO0FBQ0EsV0FBS0csU0FBTDtBQUNEOztBQVZPLEdBREU7QUFjWkksRUFBQUEsS0FBSyxFQUFFO0FBQ0xDLElBQUFBLE1BQU0sRUFBRTtBQUNOVixNQUFBQSxJQUFJLEVBQUVXLE1BREE7QUFFTkMsTUFBQUEsS0FBSyxFQUFFO0FBRkQ7QUFESCxHQWRLO0FBcUJaQyxFQUFBQSxLQUFLLEVBQUU7QUFDTEgsSUFBQUEsTUFBTSxFQUFFO0FBREgsR0FyQks7O0FBeUJaSSxFQUFBQSxZQUFZLEdBQUE7QUFDVixTQUFLWCxNQUFMLEdBQWMsRUFBZDtBQUNBLFNBQUtZLGFBQUwsR0FBcUIsQ0FBQyxDQUF0QjtBQUNELEdBNUJXOztBQThCWkMsRUFBQUEsT0FBTyxFQUFFO0FBQ1BYLElBQUFBLFNBQVMsQ0FBQ1ksS0FBRCxFQUFnQztBQUN2QyxVQUFJO0FBQUVQLFFBQUFBO0FBQUYsVUFBYSxLQUFLUSxJQUF0QjtBQUNBLFlBQU07QUFBRWYsUUFBQUE7QUFBRixVQUFhLElBQW5COztBQUVBLFVBQUljLEtBQUssSUFBSSxDQUFDcEIsUUFBUSxDQUFDb0IsS0FBRCxDQUF0QixFQUErQjtBQUM3QlAsUUFBQUEsTUFBTSxHQUFHUCxNQUFNLENBQUNnQixPQUFQLENBQWVGLEtBQWYsQ0FBVDtBQUNEOztBQUVELFVBQUlQLE1BQU0sS0FBSyxLQUFLSyxhQUFwQixFQUFtQztBQUNqQztBQUNEOztBQUVELFVBQUksS0FBS0EsYUFBTCxLQUF1QixDQUFDLENBQXhCLElBQTZCWixNQUFNLENBQUMsS0FBS1ksYUFBTixDQUF2QyxFQUE2RDtBQUMzRCxhQUFLSyxLQUFMLENBQVcsUUFBWCxFQUFxQlYsTUFBckI7QUFDQVAsUUFBQUEsTUFBTSxDQUFDLEtBQUtZLGFBQU4sQ0FBTixDQUEyQlYsU0FBM0IsQ0FBcUMsS0FBckM7QUFDRDs7QUFFRCxVQUFJRixNQUFNLENBQUNPLE1BQUQsQ0FBVixFQUFvQjtBQUNsQlAsUUFBQUEsTUFBTSxDQUFDTyxNQUFELENBQU4sQ0FBZUwsU0FBZixDQUF5QixJQUF6QjtBQUNBLGFBQUtVLGFBQUwsR0FBcUJMLE1BQXJCO0FBQ0Q7QUFDRjs7QUF0Qk07QUE5QkcsQ0FBRCxDQUFiIiwiZmlsZSI6ImJhZGdlLWdyb3VwL2luZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU3B1aUNvbXBvbmVudCB9IGZyb20gJy4uL2NvbW1vbi9jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBpc051bWJlciB9IGZyb20gJy4uL2NvbW1vbi91dGlscyc7XHJcblxyXG5TcHVpQ29tcG9uZW50KHtcclxuICByZWxhdGlvbjoge1xyXG4gICAgbmFtZTogJ2JhZGdlJyxcclxuICAgIHR5cGU6ICdkZXNjZW5kYW50JyxcclxuICAgIGxpbmtlZCh0YXJnZXQ6IFdlYXBwLkNvbXBvbmVudCkge1xyXG4gICAgICB0aGlzLmJhZGdlcy5wdXNoKHRhcmdldCk7XHJcbiAgICAgIHRoaXMuc2V0QWN0aXZlKCk7XHJcbiAgICB9LFxyXG4gICAgdW5saW5rZWQodGFyZ2V0OiBXZWFwcC5Db21wb25lbnQpIHtcclxuICAgICAgdGhpcy5iYWRnZXMgPSB0aGlzLmJhZGdlcy5maWx0ZXIoaXRlbSA9PiBpdGVtICE9PSB0YXJnZXQpO1xyXG4gICAgICB0aGlzLnNldEFjdGl2ZSgpO1xyXG4gICAgfVxyXG4gIH0sXHJcblxyXG4gIHByb3BzOiB7XHJcbiAgICBhY3RpdmU6IHtcclxuICAgICAgdHlwZTogTnVtYmVyLFxyXG4gICAgICB2YWx1ZTogMFxyXG4gICAgfVxyXG4gIH0sXHJcblxyXG4gIHdhdGNoOiB7XHJcbiAgICBhY3RpdmU6ICdzZXRBY3RpdmUnXHJcbiAgfSxcclxuXHJcbiAgYmVmb3JlQ3JlYXRlKCkge1xyXG4gICAgdGhpcy5iYWRnZXMgPSBbXTtcclxuICAgIHRoaXMuY3VycmVudEFjdGl2ZSA9IC0xO1xyXG4gIH0sXHJcblxyXG4gIG1ldGhvZHM6IHtcclxuICAgIHNldEFjdGl2ZShiYWRnZTogV2VhcHAuQ29tcG9uZW50IHwgbnVtYmVyKSB7XHJcbiAgICAgIGxldCB7IGFjdGl2ZSB9ID0gdGhpcy5kYXRhO1xyXG4gICAgICBjb25zdCB7IGJhZGdlcyB9ID0gdGhpcztcclxuXHJcbiAgICAgIGlmIChiYWRnZSAmJiAhaXNOdW1iZXIoYmFkZ2UpKSB7XHJcbiAgICAgICAgYWN0aXZlID0gYmFkZ2VzLmluZGV4T2YoYmFkZ2UpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBpZiAoYWN0aXZlID09PSB0aGlzLmN1cnJlbnRBY3RpdmUpIHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGlmICh0aGlzLmN1cnJlbnRBY3RpdmUgIT09IC0xICYmIGJhZGdlc1t0aGlzLmN1cnJlbnRBY3RpdmVdKSB7XHJcbiAgICAgICAgdGhpcy4kZW1pdCgnY2hhbmdlJywgYWN0aXZlKTtcclxuICAgICAgICBiYWRnZXNbdGhpcy5jdXJyZW50QWN0aXZlXS5zZXRBY3RpdmUoZmFsc2UpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBpZiAoYmFkZ2VzW2FjdGl2ZV0pIHtcclxuICAgICAgICBiYWRnZXNbYWN0aXZlXS5zZXRBY3RpdmUodHJ1ZSk7XHJcbiAgICAgICAgdGhpcy5jdXJyZW50QWN0aXZlID0gYWN0aXZlO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59KTtcclxuIl19
