import { SpuiComponent } from '../common/component';
const ITEM_HEIGHT = 44;
SpuiComponent({
  classes: ['main-item-class', 'content-item-class', 'main-active-class', 'content-active-class', 'main-disabled-class', 'content-disabled-class'],
  props: {
    items: Array,
    mainActiveIndex: {
      type: Number,
      value: 0
    },
    activeId: {
      type: [Number, String]
    },
    maxHeight: {
      type: Number,
      value: 300
    }
  },
  data: {
    subItems: [],
    mainHeight: 0,
    itemHeight: 0
  },
  watch: {
    items() {
      this.updateSubItems();
      this.updateMainHeight();
    },

    maxHeight() {
      this.updateItemHeight();
      this.updateMainHeight();
    },

    mainActiveIndex: 'updateSubItems'
  },
  methods: {
    // 当一个子项被选择时
    onSelectItem(event) {
      const {
        item
      } = event.currentTarget.dataset;

      if (!item.disabled) {
        this.$emit('click-item', item);
      }
    },

    // 当一个导航被点击时
    onClickNav(event) {
      const {
        index
      } = event.currentTarget.dataset;
      const item = this.data.items[index];

      if (!item.disabled) {
        this.$emit('click-nav', {
          index
        });
      }
    },

    // 更新子项列表
    updateSubItems() {
      const selectedItem = this.data.items[this.data.mainActiveIndex] || {};
      this.set({
        subItems: selectedItem.children || []
      });
      this.updateItemHeight();
    },

    // 更新组件整体高度，根据最大高度和当前组件需要展示的高度来决定
    updateMainHeight() {
      const maxHeight = Math.max(this.data.items.length * ITEM_HEIGHT, this.data.subItems.length * ITEM_HEIGHT);
      this.set({
        mainHeight: Math.min(maxHeight, this.data.maxHeight)
      });
    },

    // 更新子项列表高度，根据可展示的最大高度和当前子项列表的高度决定
    updateItemHeight() {
      this.set({
        itemHeight: Math.min(this.data.subItems.length * ITEM_HEIGHT, this.data.maxHeight)
      });
    }

  }
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRyZWUtc2VsZWN0L2luZGV4LnRzIl0sIm5hbWVzIjpbIlNwdWlDb21wb25lbnQiLCJJVEVNX0hFSUdIVCIsImNsYXNzZXMiLCJwcm9wcyIsIml0ZW1zIiwiQXJyYXkiLCJtYWluQWN0aXZlSW5kZXgiLCJ0eXBlIiwiTnVtYmVyIiwidmFsdWUiLCJhY3RpdmVJZCIsIlN0cmluZyIsIm1heEhlaWdodCIsImRhdGEiLCJzdWJJdGVtcyIsIm1haW5IZWlnaHQiLCJpdGVtSGVpZ2h0Iiwid2F0Y2giLCJ1cGRhdGVTdWJJdGVtcyIsInVwZGF0ZU1haW5IZWlnaHQiLCJ1cGRhdGVJdGVtSGVpZ2h0IiwibWV0aG9kcyIsIm9uU2VsZWN0SXRlbSIsImV2ZW50IiwiaXRlbSIsImN1cnJlbnRUYXJnZXQiLCJkYXRhc2V0IiwiZGlzYWJsZWQiLCIkZW1pdCIsIm9uQ2xpY2tOYXYiLCJpbmRleCIsInNlbGVjdGVkSXRlbSIsInNldCIsImNoaWxkcmVuIiwiTWF0aCIsIm1heCIsImxlbmd0aCIsIm1pbiJdLCJtYXBwaW5ncyI6IkFBQUEsU0FBU0EsYUFBVCxRQUE4QixxQkFBOUI7QUFFQSxNQUFNQyxXQUFXLEdBQUcsRUFBcEI7QUFFQUQsYUFBYSxDQUFDO0FBQ1pFLEVBQUFBLE9BQU8sRUFBRSxDQUNQLGlCQURPLEVBRVAsb0JBRk8sRUFHUCxtQkFITyxFQUlQLHNCQUpPLEVBS1AscUJBTE8sRUFNUCx3QkFOTyxDQURHO0FBVVpDLEVBQUFBLEtBQUssRUFBRTtBQUNMQyxJQUFBQSxLQUFLLEVBQUVDLEtBREY7QUFFTEMsSUFBQUEsZUFBZSxFQUFFO0FBQ2ZDLE1BQUFBLElBQUksRUFBRUMsTUFEUztBQUVmQyxNQUFBQSxLQUFLLEVBQUU7QUFGUSxLQUZaO0FBTUxDLElBQUFBLFFBQVEsRUFBRTtBQUNSSCxNQUFBQSxJQUFJLEVBQUUsQ0FBQ0MsTUFBRCxFQUFTRyxNQUFUO0FBREUsS0FOTDtBQVNMQyxJQUFBQSxTQUFTLEVBQUU7QUFDVEwsTUFBQUEsSUFBSSxFQUFFQyxNQURHO0FBRVRDLE1BQUFBLEtBQUssRUFBRTtBQUZFO0FBVE4sR0FWSztBQXlCWkksRUFBQUEsSUFBSSxFQUFFO0FBQ0pDLElBQUFBLFFBQVEsRUFBRSxFQUROO0FBRUpDLElBQUFBLFVBQVUsRUFBRSxDQUZSO0FBR0pDLElBQUFBLFVBQVUsRUFBRTtBQUhSLEdBekJNO0FBK0JaQyxFQUFBQSxLQUFLLEVBQUU7QUFDTGIsSUFBQUEsS0FBSyxHQUFBO0FBQ0gsV0FBS2MsY0FBTDtBQUNBLFdBQUtDLGdCQUFMO0FBQ0QsS0FKSTs7QUFNTFAsSUFBQUEsU0FBUyxHQUFBO0FBQ1AsV0FBS1EsZ0JBQUw7QUFDQSxXQUFLRCxnQkFBTDtBQUNELEtBVEk7O0FBV0xiLElBQUFBLGVBQWUsRUFBRTtBQVhaLEdBL0JLO0FBNkNaZSxFQUFBQSxPQUFPLEVBQUU7QUFDUDtBQUNBQyxJQUFBQSxZQUFZLENBQUNDLEtBQUQsRUFBbUI7QUFDN0IsWUFBTTtBQUFFQyxRQUFBQTtBQUFGLFVBQVdELEtBQUssQ0FBQ0UsYUFBTixDQUFvQkMsT0FBckM7O0FBQ0EsVUFBSSxDQUFDRixJQUFJLENBQUNHLFFBQVYsRUFBb0I7QUFDbEIsYUFBS0MsS0FBTCxDQUFXLFlBQVgsRUFBeUJKLElBQXpCO0FBQ0Q7QUFDRixLQVBNOztBQVNQO0FBQ0FLLElBQUFBLFVBQVUsQ0FBQ04sS0FBRCxFQUFtQjtBQUMzQixZQUFNO0FBQUVPLFFBQUFBO0FBQUYsVUFBWVAsS0FBSyxDQUFDRSxhQUFOLENBQW9CQyxPQUF0QztBQUNBLFlBQU1GLElBQUksR0FBRyxLQUFLWCxJQUFMLENBQVVULEtBQVYsQ0FBZ0IwQixLQUFoQixDQUFiOztBQUNBLFVBQUksQ0FBQ04sSUFBSSxDQUFDRyxRQUFWLEVBQW9CO0FBQ2xCLGFBQUtDLEtBQUwsQ0FBVyxXQUFYLEVBQXdCO0FBQUVFLFVBQUFBO0FBQUYsU0FBeEI7QUFDRDtBQUNGLEtBaEJNOztBQWtCUDtBQUNBWixJQUFBQSxjQUFjLEdBQUE7QUFDWixZQUFNYSxZQUFZLEdBQUcsS0FBS2xCLElBQUwsQ0FBVVQsS0FBVixDQUFnQixLQUFLUyxJQUFMLENBQVVQLGVBQTFCLEtBQThDLEVBQW5FO0FBRUEsV0FBSzBCLEdBQUwsQ0FBUztBQUFFbEIsUUFBQUEsUUFBUSxFQUFFaUIsWUFBWSxDQUFDRSxRQUFiLElBQXlCO0FBQXJDLE9BQVQ7QUFFQSxXQUFLYixnQkFBTDtBQUNELEtBekJNOztBQTJCUDtBQUNBRCxJQUFBQSxnQkFBZ0IsR0FBQTtBQUNkLFlBQU1QLFNBQVMsR0FBR3NCLElBQUksQ0FBQ0MsR0FBTCxDQUNoQixLQUFLdEIsSUFBTCxDQUFVVCxLQUFWLENBQWdCZ0MsTUFBaEIsR0FBeUJuQyxXQURULEVBRWhCLEtBQUtZLElBQUwsQ0FBVUMsUUFBVixDQUFtQnNCLE1BQW5CLEdBQTRCbkMsV0FGWixDQUFsQjtBQUtBLFdBQUsrQixHQUFMLENBQVM7QUFBRWpCLFFBQUFBLFVBQVUsRUFBRW1CLElBQUksQ0FBQ0csR0FBTCxDQUFTekIsU0FBVCxFQUFvQixLQUFLQyxJQUFMLENBQVVELFNBQTlCO0FBQWQsT0FBVDtBQUNELEtBbkNNOztBQXFDUDtBQUNBUSxJQUFBQSxnQkFBZ0IsR0FBQTtBQUNkLFdBQUtZLEdBQUwsQ0FBUztBQUNQaEIsUUFBQUEsVUFBVSxFQUFFa0IsSUFBSSxDQUFDRyxHQUFMLENBQ1YsS0FBS3hCLElBQUwsQ0FBVUMsUUFBVixDQUFtQnNCLE1BQW5CLEdBQTRCbkMsV0FEbEIsRUFFVixLQUFLWSxJQUFMLENBQVVELFNBRkE7QUFETCxPQUFUO0FBTUQ7O0FBN0NNO0FBN0NHLENBQUQsQ0FBYiIsImZpbGUiOiJ0cmVlLXNlbGVjdC9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNwdWlDb21wb25lbnQgfSBmcm9tICcuLi9jb21tb24vY29tcG9uZW50JztcclxuXHJcbmNvbnN0IElURU1fSEVJR0hUID0gNDQ7XHJcblxyXG5TcHVpQ29tcG9uZW50KHtcclxuICBjbGFzc2VzOiBbXHJcbiAgICAnbWFpbi1pdGVtLWNsYXNzJyxcclxuICAgICdjb250ZW50LWl0ZW0tY2xhc3MnLFxyXG4gICAgJ21haW4tYWN0aXZlLWNsYXNzJyxcclxuICAgICdjb250ZW50LWFjdGl2ZS1jbGFzcycsXHJcbiAgICAnbWFpbi1kaXNhYmxlZC1jbGFzcycsXHJcbiAgICAnY29udGVudC1kaXNhYmxlZC1jbGFzcydcclxuICBdLFxyXG5cclxuICBwcm9wczoge1xyXG4gICAgaXRlbXM6IEFycmF5LFxyXG4gICAgbWFpbkFjdGl2ZUluZGV4OiB7XHJcbiAgICAgIHR5cGU6IE51bWJlcixcclxuICAgICAgdmFsdWU6IDBcclxuICAgIH0sXHJcbiAgICBhY3RpdmVJZDoge1xyXG4gICAgICB0eXBlOiBbTnVtYmVyLCBTdHJpbmddXHJcbiAgICB9LFxyXG4gICAgbWF4SGVpZ2h0OiB7XHJcbiAgICAgIHR5cGU6IE51bWJlcixcclxuICAgICAgdmFsdWU6IDMwMFxyXG4gICAgfVxyXG4gIH0sXHJcblxyXG4gIGRhdGE6IHtcclxuICAgIHN1Ykl0ZW1zOiBbXSxcclxuICAgIG1haW5IZWlnaHQ6IDAsXHJcbiAgICBpdGVtSGVpZ2h0OiAwXHJcbiAgfSxcclxuXHJcbiAgd2F0Y2g6IHtcclxuICAgIGl0ZW1zKCkge1xyXG4gICAgICB0aGlzLnVwZGF0ZVN1Ykl0ZW1zKCk7XHJcbiAgICAgIHRoaXMudXBkYXRlTWFpbkhlaWdodCgpO1xyXG4gICAgfSxcclxuXHJcbiAgICBtYXhIZWlnaHQoKSB7XHJcbiAgICAgIHRoaXMudXBkYXRlSXRlbUhlaWdodCgpO1xyXG4gICAgICB0aGlzLnVwZGF0ZU1haW5IZWlnaHQoKTtcclxuICAgIH0sXHJcblxyXG4gICAgbWFpbkFjdGl2ZUluZGV4OiAndXBkYXRlU3ViSXRlbXMnXHJcbiAgfSxcclxuXHJcbiAgbWV0aG9kczoge1xyXG4gICAgLy8g5b2T5LiA5Liq5a2Q6aG56KKr6YCJ5oup5pe2XHJcbiAgICBvblNlbGVjdEl0ZW0oZXZlbnQ6IFdlYXBwLkV2ZW50KSB7XHJcbiAgICAgIGNvbnN0IHsgaXRlbSB9ID0gZXZlbnQuY3VycmVudFRhcmdldC5kYXRhc2V0O1xyXG4gICAgICBpZiAoIWl0ZW0uZGlzYWJsZWQpIHtcclxuICAgICAgICB0aGlzLiRlbWl0KCdjbGljay1pdGVtJywgaXRlbSk7XHJcbiAgICAgIH1cclxuICAgIH0sXHJcblxyXG4gICAgLy8g5b2T5LiA5Liq5a+86Iiq6KKr54K55Ye75pe2XHJcbiAgICBvbkNsaWNrTmF2KGV2ZW50OiBXZWFwcC5FdmVudCkge1xyXG4gICAgICBjb25zdCB7IGluZGV4IH0gPSBldmVudC5jdXJyZW50VGFyZ2V0LmRhdGFzZXQ7XHJcbiAgICAgIGNvbnN0IGl0ZW0gPSB0aGlzLmRhdGEuaXRlbXNbaW5kZXhdO1xyXG4gICAgICBpZiAoIWl0ZW0uZGlzYWJsZWQpIHtcclxuICAgICAgICB0aGlzLiRlbWl0KCdjbGljay1uYXYnLCB7IGluZGV4IH0pO1xyXG4gICAgICB9XHJcbiAgICB9LFxyXG5cclxuICAgIC8vIOabtOaWsOWtkOmhueWIl+ihqFxyXG4gICAgdXBkYXRlU3ViSXRlbXMoKSB7XHJcbiAgICAgIGNvbnN0IHNlbGVjdGVkSXRlbSA9IHRoaXMuZGF0YS5pdGVtc1t0aGlzLmRhdGEubWFpbkFjdGl2ZUluZGV4XSB8fCB7fTtcclxuXHJcbiAgICAgIHRoaXMuc2V0KHsgc3ViSXRlbXM6IHNlbGVjdGVkSXRlbS5jaGlsZHJlbiB8fCBbXSB9KTtcclxuXHJcbiAgICAgIHRoaXMudXBkYXRlSXRlbUhlaWdodCgpO1xyXG4gICAgfSxcclxuXHJcbiAgICAvLyDmm7TmlrDnu4Tku7bmlbTkvZPpq5jluqbvvIzmoLnmja7mnIDlpKfpq5jluqblkozlvZPliY3nu4Tku7bpnIDopoHlsZXnpLrnmoTpq5jluqbmnaXlhrPlrppcclxuICAgIHVwZGF0ZU1haW5IZWlnaHQoKSB7XHJcbiAgICAgIGNvbnN0IG1heEhlaWdodCA9IE1hdGgubWF4KFxyXG4gICAgICAgIHRoaXMuZGF0YS5pdGVtcy5sZW5ndGggKiBJVEVNX0hFSUdIVCxcclxuICAgICAgICB0aGlzLmRhdGEuc3ViSXRlbXMubGVuZ3RoICogSVRFTV9IRUlHSFRcclxuICAgICAgKTtcclxuXHJcbiAgICAgIHRoaXMuc2V0KHsgbWFpbkhlaWdodDogTWF0aC5taW4obWF4SGVpZ2h0LCB0aGlzLmRhdGEubWF4SGVpZ2h0KSB9KTtcclxuICAgIH0sXHJcblxyXG4gICAgLy8g5pu05paw5a2Q6aG55YiX6KGo6auY5bqm77yM5qC55o2u5Y+v5bGV56S655qE5pyA5aSn6auY5bqm5ZKM5b2T5YmN5a2Q6aG55YiX6KGo55qE6auY5bqm5Yaz5a6aXHJcbiAgICB1cGRhdGVJdGVtSGVpZ2h0KCkge1xyXG4gICAgICB0aGlzLnNldCh7XHJcbiAgICAgICAgaXRlbUhlaWdodDogTWF0aC5taW4oXHJcbiAgICAgICAgICB0aGlzLmRhdGEuc3ViSXRlbXMubGVuZ3RoICogSVRFTV9IRUlHSFQsXHJcbiAgICAgICAgICB0aGlzLmRhdGEubWF4SGVpZ2h0XHJcbiAgICAgICAgKVxyXG4gICAgICB9KTtcclxuICAgIH1cclxuICB9XHJcbn0pO1xyXG4iXX0=
